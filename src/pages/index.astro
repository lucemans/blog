---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../consts';

import { getCollection } from 'astro:content';
import FormattedDate from '../components/FormattedDate.astro';

const posts = (await getCollection('p')).sort(
    (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);

const schema = JSON.stringify({
    '@context': 'https://schema.org',
    '@type': 'CollectionPage',
    mainEntity: {
        '@type': 'ItemList',
        itemListElement: posts.map((post, indexedDB, p) => ({
            '@type': 'ListItem',
            position: p.length - indexedDB,
            url: `https://luc.blog/p/${post.slug}`,
        })).reverse(),
    },
});
---

<!DOCTYPE html>
<html lang="en">
    <head>
        <script type="application/ld+json" set:html={schema} />
        <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
        <style>
            ul {
                list-style-type: none;
                padding: unset;
            }
            ul li {
                display: flex;
            }
            ul li :global(time) {
                flex: 0 0 130px;
                font-style: italic;
                color: #595959;
            }
            ul li a:visited .x {
                display: none;
                color: #8e32dc;
            }
        </style>
    </head>
    <body class="ww">
        <Header title={SITE_TITLE} />
        <main>
            <img src="/think.webp" class="w-32 mx-auto mb-4" />

            <p>
                This page is an aggregate of technical writing, proposals,
                documents, & much more.
            </p>

            <p>Also available over <a href="/rss.xml">RSS</a></p>

            <note>
                <p>
                    This website stores formal works, proposals, and documents.
                </p>
            </note>

            <div class="border-b w-full h-0 my-4"></div>

            <section>
                <ul class="grid grid-cols-1 gap-2">
                    {
                        posts.map((post) => (
                            <li class="">
                                <a
                                    href={`/p/${post.slug}/`}
                                    class="p-2 w-full hover:bg-gray-50"
                                >
                                    <div class="flex justify-between w-full">
                                        <h2 class="font-bold">
                                            {post.data.title}
                                        </h2>

                                        <span>
                                            <FormattedDate
                                                date={post.data.pubDate}
                                            />
                                        </span>
                                    </div>
                                    <p>{post.data.description}</p>
                                </a>
                            </li>
                        ))
                    }
                </ul>
            </section>
        </main>
        <Footer />
    </body>
</html>
